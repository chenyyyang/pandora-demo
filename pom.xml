<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.hahaha.middleware</groupId>
    <artifactId>pandora-demo</artifactId>
    <version>1.0-SNAPSHOT</version>

    <dependencies>
        <!--http://res.hahahahhhhh.hah-img.com/test_upload/middleware-1.0-SNAPSHOT.jar
        点击下载即可..然后放到systemPath参数上-->
        <dependency>
            <groupId>com.hahaha</groupId>
            <artifactId>middleware-demo</artifactId>
            <version>1.0-SNAPSHOT</version>
            <optional>true</optional>
            <!--This scope is similar to provided except that you have to provide the JAR which contains it explicitly.
            The artifact is always available and is not looked up in a repository.-->
<!--            <scope>system</scope>-->
<!--            <systemPath>Users/chen/Downloads/middleware-1.0-SNAPSHOT.jar</systemPath>-->
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.0.1</version>
            <!--https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#System_Dependencies
            you would set the dependency on the Servlet API
             to scope provided because the web container provides those classes.
              A dependency with this scope is added to the classpath used for compilation and test,
               but not the runtime classpath. It is not transitive.-->
            <scope>provided</scope>
        </dependency>


        <dependency>
            <groupId>cglib</groupId>
            <artifactId>cglib</artifactId>
            <version>3.3.0</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>8</source>
                    <target>8</target>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>